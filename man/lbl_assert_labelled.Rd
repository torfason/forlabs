% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert.R
\name{lbl_assert_labelled}
\alias{lbl_assert_labelled}
\alias{lbl_check_labelled}
\alias{lbl_test_labelled}
\title{Verify a \code{labelled} Object}
\usage{
lbl_check_labelled(x)

lbl_test_labelled(x)

lbl_assert_labelled(x, .var.name = checkmate::vname(x), add = NULL)
}
\arguments{
\item{x}{The object to be checked.}

\item{.var.name}{Name of the checked object to print in assertions.
Defaults to the heuristic implemented in \code{\link[checkmate:vname]{checkmate::vname()}}.}

\item{add}{Collection to store assertion messages.
See \link[checkmate:AssertCollection]{checkmate::AssertCollection}.}
}
\value{
A logical value. If the input object is a 'haven_labelled' vector, it returns \code{TRUE};
otherwise, it returns an error message indicating the issue with the input.
}
\description{
The \code{lbl_assert_labelled()} function verifies that the input object is a
well-formed labelled vector. \code{lbl_check_labelled()} and \code{lbl_test_labelled()}
serve as analogous functions, adhering to \code{checkmate} conventions.

The functions verify the correct class, that \code{var_label(x)} is \code{NULL} or
\code{character}, and that the \code{val_labels(x)} are either NULL or match the type
of \code{x}, in line with the (minimal) specification in \code{\link[haven:labelled]{haven::labelled()}}.
}
\examples{
# Check if 'fruit_lbl' is a 'haven_labelled' vector
lbl_check_labelled(fruit_lbl)

}
\seealso{
\code{\link[haven:labelled]{haven::labelled()}}
}
